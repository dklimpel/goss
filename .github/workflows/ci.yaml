name: "Build binaries"
on:
  # don't build any branch other than master (and prs) when git pushed
  pull_request: {}
  push:
    branches:
      - master
      - "/^v\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/"
jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Prepare windows
        run: choco install make
      - name: Install
        run: ci/install.sh
      - name: Build
        run: make "test-windows-all"

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Install
        run: ci/install.sh
      - name: Before build
        run: ./cc-test-reporter before-build
      - name: Build
        run: make "test-darwin-all"
      - name: Report failed build
        if: failure()
        run: ./cc-test-reporter after-build --exit-code 1 -d
      - name: Report successful build
        if: success()
        run: ./cc-test-reporter after-build --exit-code 0 -d

  build-linux:
    services:
      docker:
        image: docker:25-dind
        options: --privileged
        ports:
          - 2375:2375
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install Docker
        run: |
          apt-get update
          #apt-get install -y docker.io
          apt-get update && \
              apt-get install -y \
                 ca-certificates \
                 curl \
                 gnupg \
                 lsb-release \
                 iputils-ping \
                 build-essential
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo \
               "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update && apt-get install -y docker-ce-cli

#      - name: Test connection
#        run: |
#          ping -c 3 docker

      - name: Test Docker
        run: |
          pwd
          #sudo find . -name "docker.sock"
          docker version
          docker info
          #ping -c 3 docker

      - name: Install
        run: ci/install.sh
      - name: Before build
        run: ./cc-test-reporter before-build
      - name: Build
        run: ci/build.sh
      - name: Report failed build
        if: failure()
        run: ./cc-test-reporter after-build --exit-code 1 -d
      - name: Report successful build
        if: success()
        run: ./cc-test-reporter after-build --exit-code 0 -d

